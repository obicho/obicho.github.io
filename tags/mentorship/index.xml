<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mentorship on Cho-Nan Tsai CTO media interviews, essays and talks</title>
    <link>https://obicho.github.io/tags/mentorship/</link>
    <description>Recent content in mentorship on Cho-Nan Tsai CTO media interviews, essays and talks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Oct 2022 00:42:36 -0700</lastBuildDate><atom:link href="https://obicho.github.io/tags/mentorship/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Path to CTO</title>
      <link>https://obicho.github.io/essays/path-to-cto/</link>
      <pubDate>Tue, 25 Oct 2022 00:42:36 -0700</pubDate>
      
      <guid>https://obicho.github.io/essays/path-to-cto/</guid>
      <description>I have been meeting a lot of great technical leaders lately. Not a single one of them had the same career path. Here is an ascii illustration of various possible ways you can become a CTO. It could be useful for someone navigating their career in software technology.
cto, public company cto, private company cto, divisional, private company svp of technology svp of engineering vp of technology vp of engineering director of technology director of engineering director of product mgmt engineering manager CIO sr tech lead IT SVP tech lead IT VP architect IT Director principle engineer IT Project Manager evangelist cto, startup staff engineer IT Program Manager solution engineer project manager senior software engineer senior backend senior frontend sr devops sr full stack IT Manager sales engineer technical program manager software engineer backend engineer frontend engineer devops engineer fullustack IT Helpdesk developer advocate product manager junior software engineer intern ▲ │ ┌───┴───┐ │START │ │ │ └───────┘ </description>
    </item>
    
    <item>
      <title>Top 10 books for engineering managers</title>
      <link>https://obicho.github.io/essays/top-10-reading-list-for-eng-mgr/</link>
      <pubDate>Mon, 24 Oct 2022 00:42:36 -0700</pubDate>
      
      <guid>https://obicho.github.io/essays/top-10-reading-list-for-eng-mgr/</guid>
      <description> The Mythical Man Month The Pragmatic Programmer Clean Code Peopleware Code Complete The Lean Startup The Cold Start Problem The Effective Executive The Culture Code Turn The Ship Around </description>
    </item>
    
    <item>
      <title>Career planning, or not</title>
      <link>https://obicho.github.io/essays/career-planning-or-not/</link>
      <pubDate>Thu, 20 Oct 2022 00:42:36 -0700</pubDate>
      
      <guid>https://obicho.github.io/essays/career-planning-or-not/</guid>
      <description>The amazing thing about meeting people in tech is that you can put people in two camps. The first camp is the founder type: they have a strong vision and want to build something to change the world. You can feel the energy blasting from every cell when they speak.
People in the second camp are professionals. They work for wonderful corporations and they are masters in what they do. Every step of the way, they work hard to build their career.</description>
    </item>
    
    <item>
      <title>Myths about software engineers</title>
      <link>https://obicho.github.io/essays/myths-about-software-engineers/</link>
      <pubDate>Tue, 11 Oct 2022 00:42:36 -0700</pubDate>
      
      <guid>https://obicho.github.io/essays/myths-about-software-engineers/</guid>
      <description>They are super opinionated. An engineer who likes to apply one particular technology on every problem is not a good engineer. They are just being opinionated for no good reason. A good engineer would look at the problem, analyze it and then find the best solution (tools, programming language, etc). Experienced engineers would definitely have an opinion about different technologies but they would never enforce.
They are difficult to work with.</description>
    </item>
    
  </channel>
</rss>
